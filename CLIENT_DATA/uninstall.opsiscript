; This sourcecode published under the Terms of the General Public License.
; Written by Eric Esser, Wissenschaftszentrum Berlin, eric.esser@wzb.eu.
; Inspired by uib gmbh (www.uib.de), Thomas Besser (KIT), Detlef Krummel (GEI) and Tobias Friede (Fraunhofer)

[Actions]
;==========================================================================================================
; Includes
include_insert "common.opsiinc"
include_append "section_linkfolder.opsiinc"

;==========================================================================================================
; Variables
DefVar $CustomPostDeinstall$

;==========================================================================================================
; Program logic

; Uninstall via delsub
Message "Uninstalling " + $ProductId$ + " ..."
Set $uninstall$	= "true"
comment "Start uninstall sub section"
Sub "%ScriptPath%\delsub.opsiscript"

; Include post deinstall file in custom folder via OPSI property 
comment "include custom post deinstall file"
set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
if not ($CustomPostDeinstall$ = "none")
	if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
		include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
	endif
endif

;==========================================================================================================
; Functions

[sub_remove_x_versions_loop]
; Looping through all MSI-IDs and removing them
Set $UninstTempList$ = splitString("%aktmsi%","=")
Set $UninstName$  = takeString(0,$UninstTempList$)
Set $UninstMsiId$ = takeString(1,$UninstTempList$)
sub_remove_x_versions

[sub_remove_x_versions]
; Only remove if the program is really installed. :)
if not ((GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\" + $UninstMsiId$ + "] DisplayName") = "") AND (GetRegistryStringValue64("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\" + $UninstMsiId$ + "] DisplayName") = "")  )
	Message "Uninstalling " + $UninstName$ + "..."
  comment "MSI id " + $UninstMsiId$ + " found in registry, starting msiexec to remove " + $UninstName$
	Winbatch_uninstall_msi
	sub_check_exitcode
	Set $DesktopIconName$ = $UninstName$ 
	LinkFolder_delete
else
  comment "MSI id " + $UninstMsiId$ + " not found in registry, " + $UninstName$ + " probably not installed"
endif

[sub_remove_really_old_versions]
; Uninstallaiton of Endnote 7 needs special treatment, newer versions have an msi installer.
Set $UninstallProgram$ = "%ProgramFiles32Dir%\EndNote\UnWise.exe"
if (FileExists($UninstallProgram$))
	Message "Uninstalling Endnote 7..."
	comment "Uninstalling Endnote 7"
	Winbatch_uninstall
	sub_check_exitcode
endif

[Winbatch_uninstall_msi]
msiexec /x $UninstMsiId$ /qb! /l*v $UninstallLog$ REBOOT=ReallySuppress

[Winbatch_uninstall]
"$UninstallProgram$" /A "$UninstallLog$"